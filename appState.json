{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f": {
        "id": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "parent": null,
        "name": "LambdaSNS",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
          "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
          "a0427590-749e-4c7c-a1c9-c666864ec1ba",
          "b05d9142-3d79-4cdf-808a-f24a51e5030c",
          "30550c2b-0a41-421f-ae44-6b0f1a4595dc"
        ],
        "isRemovable": false,
        "filePath": "LambdaSNS"
      },
      "d208d08c-c661-4a9c-8b84-5a3be13c9a94": {
        "id": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst sns = new AWS.SNS();\n\nexports.handler = function (event, context, callback) {\n\n    let receiver = event['receiver'];\n    let sender = event['sender'];\n    let message = event['message'];\n\n    console.log(\"Sending message\", message, \"to receiver\", receiver);\n\n    sns.publish({\n        Message: message,\n        MessageAttributes: {\n            'AWS.SNS.SMS.SMSType': {\n                'DataType': 'String',\n                'StringValue': 'Promotional'\n            },\n            'AWS.SNS.SMS.SenderID': {\n                'DataType': 'String',\n                'StringValue': sender\n            }\n        },\n        PhoneNumber: receiver\n    }).promise()\n        .then(data => {\n            // your code goes here\n            console.log(\"Sent message to\", receiver);\n\t\t\tcallback(null, data);\n        })\n        .catch(err => {\n            // error handling goes here\n            console.log(\"Sending failed\", err);\n\t\t\tcallback(err);\n        });\n\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2SMSGatewaysendSMSpost",
            "config": {}
          }
        ],
        "testCases": {
          "0eb08f81-4a9a-459a-a859-44ddf14d836c": {
            "id": "0eb08f81-4a9a-459a-a859-44ddf14d836c",
            "functionId": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
            "name": "Mensaje prueba",
            "event": "{\n \"receiver\": \"+527771302351\",\n \"sender\": \"KOFSMS\",\n \"message\": \"Alta de cliente\"\n}"
          },
          "18394956-b41b-4cd3-9d02-61b1677d2b9e": {
            "id": "18394956-b41b-4cd3-9d02-61b1677d2b9e",
            "name": "geocoder",
            "functionId": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
            "event": "{\n    \"lat\": \"value1\",\n    \"lon\": \"value2\"\n}"
          }
        }
      },
      "05bfcffd-9744-4f23-89d0-3ce97fd8f097": {
        "id": "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "geocoder.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/geocoder.js",
        "code": "var Request = require(\"request\");\n\nexports.handler = function(event, context, callback) {\n    \n    let lat = event['lat'];\n    let lon = event['lon'];\n    let geocoder = {\n        numero: \"\",\n        calle: \"\",\n        colonia: \"\",\n        municipio: \"\",\n        estado: \"\",\n        pais: \"\",\n        codigoPostal: \"\"\n    }\n    \n    Request.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lon + \"&key=AIzaSyB_H0OkKqjnld_RXVKXClJbENg4xO4eVxQ\", (error, response, body) => {\n        if(error) {\n            return console.dir(error);\n        }\n        let api = JSON.parse(body);\n        let direccion = api.results[0];\n        let dir = direccion.address_components\n        \n        dir.forEach(function(element) {\n            if (element.types[0] == \"street_number\") {\n                geocoder.numero = element.long_name;\n            }\n            if (element.types[0] == \"route\") {\n                geocoder.calle = element.long_name;\n            }\n            if (element.types[0] == \"neighborhood\") {\n                geocoder.municipio = element.long_name;\n            }\n            if (element.types[0] == \"political\") {\n                geocoder.colonia = element.long_name;\n            }\n            if (element.types[0] == \"locality\") {\n                geocoder.estado = element.long_name;\n            }\n            if (element.types[0] == \"country\") {\n                geocoder.pais = element.long_name;\n            }\n            if (element.types[0] == \"postal_code\") {\n                geocoder.codigoPostal = element.long_name;\n            }\n            console.log(element)\n            console.log(geocoder)\n        })\n        console.log(direccion);\n        callback(null, geocoder);\n    });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2GeoGatewaygeocoderpost",
            "config": {}
          }
        ]
      },
      "a0427590-749e-4c7c-a1c9-c666864ec1ba": {
        "id": "a0427590-749e-4c7c-a1c9-c666864ec1ba",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "consultaClientes.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/consultaClientes.js",
        "code": "exports.handler = function(event, context, callback) {\n    let idCliente = event['idCliente'];\n    \n    callback(null, {\"codigoCliente\": idCliente});\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2ConsultaClientesGatewayconsultaClientespost",
            "config": {}
          }
        ]
      },
      "b05d9142-3d79-4cdf-808a-f24a51e5030c": {
        "id": "b05d9142-3d79-4cdf-808a-f24a51e5030c",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "altaClientes.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/altaClientes.js",
        "code": "let SL_AWS = require('slappforge-sdk-aws');\nlet AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nvar json2xls = require('json2xls');\nconst csv = require('csvtojson');\nconst uuidv4 = require('uuid/v4');\nvar mysql = require('mysql');\n\nexports.handler = function (event, context, callback) {\n    \n    let cliente = {\n        //Back\n        idOficinaMovil: event.cliente['idCliente'], //Identificador aleatorio para OM (16)\n        EVENTOGUID: \"f07ea7f6-8bdd-4463-8cb4-c97cb40d6657\", // OMTEMP15\n        VKORG: \"0142\", //Dato fijo de organización de ventas 0142\n        KDGRP: \"\", //**Generar con el catalogo de codigo postal (indentificador)\n        BZIRK: \"\", //**Generar con el catalogo de codigo postal (Distrbuidora)\n        KUNNR: \"CD00000000\", //Dato fijo para clientes nuevos (Número de cliente definitivo)\n        ID_Solicitud: event.cliente['codigoCliente'], //Generar aleatorio (22),\n        ID_Motivo_Solicitud: \"ZB18\", //Dato fijo para altas de cliente\n        ZTEXT: \"\", //Se solicita en la mascara de clientes\n        ZFECHA: \"\", //Extraer con la información de fechaAlta (Se coloca por .NET)\n        ZHORA: \"\", //Extraer con la información de fechaAlta (Se coloca por .NET)\n        fechaSolicitud: event.cliente['fechaAlta'], //Extraer fecha de lambda\n        //Front Appian\n        //idCliente: event['idCliente'], //Generado incrementalmente desde Appian, temporal hasta que se tenga el definitivo de SAP\n        //codigoCliente: event['codigoCliente'], //Usuario final que genera el transaccional\n        //fechaAlta: event['fechaAlta'], //Generada por Appian\n        ZNAME1: event.cliente['nombreTienda'], //Capturada en Appian (Nombre de la tienda)\n        NAME_FIRST: event.cliente['nombreContacto'], //Capturado en Appian (Nombre del contacto)\n        NAME_LAST: event.cliente['apellidoContacto'], //Capturado en Appian (Apellido del contacto)\n        ZTELFIJO: event.cliente['telefono'], //Capturado en Appian (Telefono fijo)\n        ZCELULAR: event.cliente['celular'], //Capturado en Appian (telefono celular)\n        ZTELFIJO_CEL: event.cliente['celular'], //Capturado en Appian (telefono celular)\n        ZCORREO: event.cliente['correo'], //Capturado en Appian (cooreo electrónico)\n        ZZCRM_LAT: event.cliente['latitud'], //Capturado en Appian con gps (latitud)\n        ZZCRM_LONG: event.cliente['longitud'], //Capturado en Appian con gps (longitud)\n        ZCPOSTAL: event.cliente['codigoPostal'], //Capturado en Appian (codigo postal)\n        estado: event.cliente['estado'], //Capturado en Appian\n        ZESTPROV: event.cliente['estado'], //**buscar en catálogo (clave o id del estado)\n        ZMUNIDELEG: event.cliente['municipio'], //Capturado en Appian (municipio)\n        ZCOLONIA: event.cliente['colonia'], //Capturado en Appian (colonia)\n        ZCALLE: event.cliente['calle'], //Capturado en Appian (calle)\n        ZCALLECON: \"\", //dato dummy (callecon)\n        ZENTRECALLE1: \"\", //dato dummy (entrecalle)\n        ZENTRECALLE2: \"\",\n        ZNUMEXT: event.cliente['numeroExt'], //Capturado en Appian (número exterior)\n        ZLOTE: \"\", //dato dummy\n        ZMANZANA: \"\", //dato dummy\n        ZNUMINT: event.cliente['numeroInt'], //Capturado en Appian (número interior)\n        ZENREJADO: event.cliente['enrejado'], //Capturado en Appian\n        VPTYP: \"ZPV\", //**Catalogo de rutas (plan de visita de ruta de preventa)\n        ROUTE: event.cliente['RutaDePreventa'], //Capturado en Appian\n        RUTA_REPARTO: event.cliente['rutaDeReparto'],\n        //Visita\n        diasVisita: event.cliente['diasVisita'],\n        SEQULUNES: event.cliente['lunes'],\n        SEQUMARTES: event.cliente['martes'],\n        SEQUMIERCOLES: event.cliente['miercoles'],\n        SEQUJUEVES: event.cliente['jueves'],\n        SEQUVIERNES: event.cliente['viernes'],\n        SEQUSABADO: event.cliente['sabado'],\n        IDMETODO: event.cliente['diaEntrega'], //se genera con catalogo de metodo desde Appian\n        ZREQREM: event.cliente['remision'], //Bit para remisión\n        ZREQFAC: event.cliente['factura'], // si trae datos de RFC se considera como True\n        ZPAPERLESS: event.cliente['noImpresion'],\n        ZFISICAMORAL: event.cliente['RFCregimenFiscal'], //M2, M3 y M4 para persona física\n        ZNAME4: event.cliente['razonSocial'], //Ingresada en caso de que sea persona moral\n        ZRFCNOMBRE: event.cliente['RFCnombre'],\n        ZRFCAPELLIDOS: event.cliente['RFCapellidos'],\n        ZRFC: event.cliente['RFC'],\n        ZRFCCODIGOPOSTAL: event.cliente['RFCcodigoPostal'],\n        ZRFCESTADO: event.cliente['RFCestado'],\n        ZRFCMUNDELEG: event.cliente['RFCmunicipio'],\n        ZRFCCOLONIA: event.cliente['RFCcolonia'],\n        ZRFCCALLE: event.cliente['RFCcalle'],\n        ZRFCCALLE_CON: \"\",\n        ZRFCNUM_EXT: event.cliente['RFCnumeroExt'],\n        ZRFCNUM_INT: event.cliente['RFCnumeroInt'],\n        ZCFDI: event.cliente['CFDI'],\n        //descripcion: event['descripcion'],\n        ISSCOM: \"\",\n        GEC: \"\",\n        LOCALIDAD: \"\",\n        OCASIONDECONSUMO: \"\"\n    };\n\n    let cuestionarios = {\n        ISSCOMcuestionario: event.cliente.ISSCOM['cuestionario'],\n        ISSCOMp1: event.cliente.ISSCOM['p1'],\n        ISSCOMp2: event.cliente.ISSCOM['p2'],\n        ISSCOMp3: event.cliente.ISSCOM['p3'],\n        ISSCOMp4: event.cliente.ISSCOM['p4'],\n        ISSCOMp5: event.cliente.ISSCOM['p5'],\n        GECp1: event.cliente.GEC['p1'],\n        GECp2: event.cliente.GEC['p2'],\n        GECp3: event.cliente.GEC['p3'],\n    };\n\n    let pedidos = event['productos'];\n    let resultado;\n    let cat;\n    // pedidos.forEach(function (element) {\n    //     console.log(element);\n    // });\n\n///////////////////////////CUESTIONARIOS/////////////////////////\nswitch(cuestionarios.ISSCOMcuestionario){\n    case '1': //CUESTIONARIO No. 1 - Home Market - COMPRA DE ABARROTES Y PRODUCTOS BÁSICOS.\n        if(cuestionarios.ISSCOMp1 == \"A\"){\n            cliente.ISSCOM = 2305; //HOGAR CON VENTA\n        }else{\n            switch(cuestionarios.ISSCOMp2){\n                case 'A':\n                    cliente.ISSCOM = 2104; //MISCELANEA\n                break;\n                case 'B':\n                    cliente.ISSCOM = 2101; //ABARROTE\n                break;\n                case 'C':\n                    cliente.ISSCOM = 2304; //FRUTAS Y VERDURAS\n                break;\n                case 'D':\n                    cliente.ISSCOM = 2301; //CARNICERÍA/POLLERÍA/PESCADERÍA\n                break;\n                case 'E':\n                    cliente.ISSCOM = 2202; //VINATERÍA\n                break;\n                case 'F':\n                    cliente.ISSCOM = 2306; //PANADERÍA\n                break;\n                case 'G':\n                    cliente.ISSCOM = 2309; //TIENDA ESPECIALIZADA (NATURISTA, VEGET.)\n                break;\n                case 'H':\n                    cliente.ISSCOM = 2310; //TORTILLERÍA\n                break;\n                case 'I':\n                    cliente.ISSCOM = 2201; //EXPENDIO DE CERVEZA\n                break;\n            }\n        }\n    break;\n    case '2': //CUESTIONARIO No. 2  Moderno / Home Market - COMPRA DE ABARROTES EN AUTOSERVICIOS Y CUENTAS CLAVE\n        if(cuestionarios.ISSCOMp1 == \"A\"){\n            switch(cuestionarios.ISSCOMp2){\n                case 'A':\n                    cliente.ISSCOM = 1103; //AUTOSERVICIO GRANDE\n                break;\n                case 'B':\n                    cliente.ISSCOM = 1104; //BODEGA AUTOSERVICIO\n                break;\n                case 'C':\n                    cliente.ISSCOM = 1105; //CLUB DE MEMBRESIA\n                break;\n                case 'D':\n                    cliente.ISSCOM = 1202; //TDC CADENA\n                break;\n                case 'E':\n                    cliente.ISSCOM = 1101; //AUTOSERVICIO CHICO\n                break;\n                case 'F':\n                    cliente.ISSCOM = 1106; //HIPERMERCADO\n                break;\n                case 'G':\n                    cliente.ISSCOM = 1102; //AUTOSERVICIO GOBIERNO\n                break;\n                case 'H':\n                    cliente.ISSCOM = 2102; //MINI SUPER CADENA\n                break;\n            }\n        }else{\n            if(cuestionarios.ISSCOMp3 == \"A\"){\n                if(cuestionarios.ISSCOMp4 == \"A\"){\n                    if(cuestionarios.ISSCOMp5 == \"A\"){\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }else{\n                        cliente.ISSCOM = 2105; //TDC INDEPENDIENTE\n                    }\n                }else{\n                    if(cuestionarios.ISSCOMp5 == \"A\"){\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }else{\n                        cliente.ISSCOM = 2105; //TDC INDEPENDIENTE\n                    }\n                }\n            }else{\n                if(cuestionarios.ISSCOMp4 == \"A\"){\n                    if(cuestionarios.ISSCOMp5 == \"A\"){\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }else{\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }\n                }else{\n                    if(cuestionarios.ISSCOMp5 == \"A\"){\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }else{\n                        cliente.ISSCOM = 2103; //MINI SUPER INDEPENDIENTE\n                    }\n                }\n            }\n        }\n    break;\n    case '3': //CUESTIONARIO No. 3 - CANALES DE ENTRETENIMIENTO Y RECREACIÓN\n        switch(cuestionarios.ISSCOMp1){\n                case 'A':\n                    cliente.ISSCOM = 3801; //BILLAR\n                break;\n                case 'B':\n                    cliente.ISSCOM = 3803; //CINE/AUTOCINEMA\n                break;\n                case 'C':\n                    cliente.ISSCOM = 3605; //DISCOTECA\n                break;\n                case 'D':\n                    cliente.ISSCOM = 3701; //GIMNASIO\n                break;\n                case 'E':\n                    cliente.ISSCOM = 3804; //MUSEO\n                break;\n                case 'F':\n                    cliente.ISSCOM = 4003; //EXPOSICIONES\n                break;\n                case 'G':\n                    cliente.ISSCOM = 3806; //TEATRO\n                break;\n                case 'H':\n                    cliente.ISSCOM = 3809; //MÁQUINAS DE VIDEOJUEGOS\n                break;\n                case 'I':\n                    cliente.ISSCOM = 3808; //CASINO\n                break;\n                case 'J':\n                    cliente.ISSCOM = 3703; //ESTADIO\n                break;\n                case 'K':\n                    cliente.ISSCOM = 3805; //PARQUE DE DIVERSIONES\n                break;\n                case 'L':\n                    cliente.ISSCOM = 3704; //LOCALIDADES DEPORTIVAS\n                break;\n                case 'M':\n                    cliente.ISSCOM = \"\"; //OTROS\n                break;\n            }\n    break;\n    case '4': //CUESTIONARIO No. 4 - ESTABLECIMIENTOS PARA COMER Y BEBER\n        switch(cuestionarios.ISSCOMp1){\n            case 'A':\n                switch(cuestionarios.ISSCOMp3){\n                    case 'A':\n                        cliente.ISSCOM = 4601; //RSR HAMBURGUESAS\n                    break;\n                    case 'B':\n                        cliente.ISSCOM = 4602; //RSR PIZZAS\n                    break;\n                    case 'C':\n                        cliente.ISSCOM = 4603; //RSR POLLO\n                    break;\n                    case 'D':\n                        cliente.ISSCOM = 2308; //ROSTICERÍA\n                    break;\n                    case 'E':\n                        cliente.ISSCOM = 4604; //RSR TACOS\n                    break;\n                    case 'F':\n                        cliente.ISSCOM = 3301; //NEVERÍA, FUENTE DE SODAS\n                    break;\n                    case 'G':\n                        cliente.ISSCOM = 4607; //RSR TORTAS/ SANDWICHES\n                    break;\n                    case 'H':\n                        cliente.ISSCOM = 4101; //FONDA/LONCHERÍA/MERENDERO\n                    break;\n                    case 'I':\n                        cliente.ISSCOM = 4502; //RESTAURANTE\n                    break;\n                    case 'J':\n                        cliente.ISSCOM = 2302; //DULCERÍA\n                    break;\n                    case 'K':\n                        cliente.ISSCOM = 3301; //NEVERÍA, FUENTE DE SODAS\n                    break;\n                    case 'L':\n                        cliente.ISSCOM = 3601; //BAR/TABERNA/CANTINA\n                    break;\n                    case 'M':\n                        cliente.ISSCOM = 3604; //CENTRO NOCTURNO\n                    break;\n                    case 'N':\n                        cliente.ISSCOM = 3603; //PULQUERÍA/MEZCALERÍA\n                    break;\n                    case 'O':\n                        cliente.ISSCOM = 4606; //RSR MARISCOS\n                    break;\n                    case 'P':\n                        cliente.ISSCOM = 4605; //RSR FRITANGAS/ ANTOJITOS\n                    break;\n                    case 'Q':\n                        cliente.ISSCOM = 4501; //CAFETERÍA\n                    break;\n                }\n            break;\n            case 'B':\n                cliente.ISSCOM = 3106; //COMEDOR INDUSTRIAL\n            break;\n            case 'C':\n                cliente.ISSCOM = 3105; //COMEDOR DE OFICINA\n            break;\n        }\n    break;\n    case '5':\n        switch(cuestionarios.ISSCOMp1){\n            case 'A':\n                cliente.ISSCOM = 4701; //ASILO/ CASA HOGAR\n            break;\n            case 'B':\n                cliente.ISSCOM = 3101; //CARCEL/POLICÍA/BOMBEROS\n            break;\n            case 'C':\n                cliente.ISSCOM = 3109; //INSTALACIÓN MILITAR\n            break;\n            case 'D':\n                cliente.ISSCOM = 3102; //HOSPITAL DE GOBIERNO\n            break;\n            case 'E':\n                cliente.ISSCOM = 3103; //HOSPITAL PARTICULAR\n            break;\n            case 'F':\n                cliente.ISSCOM = 3104; //CLINICAS Y CONSULTORIOS MEDICOS\n            break;\n            case 'G':\n                cliente.ISSCOM = 3107; //INDUSTRIA/FÁBRICA\n            break;\n            case 'H':\n                cliente.ISSCOM = 3108; //INSTALACIÓN DE GOBIERNO\n            break;\n            case 'I':\n                cliente.ISSCOM = 3110; //OFICINA\n            break;\n            case 'J':\n                cliente.ISSCOM = 4708; //OFICINA POSTAL/CASETAS TELEFÓNICAS\n            break;\n            case 'K':\n                cliente.ISSCOM = 4712; //SERVICIOS PÚBLICOS\n            break;\n            case 'L':\n                cliente.ISSCOM = 4713; //SISTEMA DE TRANSPORTE PÚBLICO\n            break;\n            case 'M':\n                cliente.ISSCOM = 4710; //PARADEROS/SITIOS DE TAXI\n            break;\n                }\n    break;\n}\n\n    ////////////GEC/////////////////\n    if(cuestionarios.GECp1 == \"A\"){\n        if(cuestionarios.GECp2 == \"A\"){\n            if(cuestionarios.GECp3 = \"A\"){\n                cliente.GEC = \"52\" //PLATA\n            }else{\n                cliente.GEC = \"53\" //BRONCE\n            }\n        }else{\n            if(cuestionarios.GECp3 = \"A\"){\n                cliente.GEC = \"52\" //PLATA\n            }else{\n                cliente.GEC = \"52\" //PLATA\n            }\n        }\n    }else{\n        cliente.GEC = \"53\" //BRONCE\n    }\n    //////////////////////////////////\n\n\n//////////////////////////////////////////////////////////////////\n\n//////////////////////////SQL CONNECTION//////////////////////////\n\n    var connection = mysql.createConnection({\n        host     : \"kof.cmk4tzokwqsd.us-west-2.rds.amazonaws.com\",\n        user     : \"kofadmin\",\n        password : \"CyEoDDTWfCtPY7h3NKzB\",\n        port     : 3306,\n        database : \"innodb\",\n    });\n\n    connection.connect(function(err) {\n    if (err) {\n        console.error('Database connection failed : ' + err.stack);\n        return;\n    }\n\n    console.log('Conexión a la base de datos');\n\n    var catalogoCP = 'SELECT * FROM catalogoCP WHERE ID_CODIGOP=' + cliente.ZCPOSTAL\n    connection.query(catalogoCP, function (err, result) {\n    if (err) throw err;\n    resultado = result[0];\n    cliente.KDGRP = resultado.KDGRP\n    cliente.BZIRK = resultado.BZIRK\n    // cliente.ZESTPROV = resultado.ID_ESTADO\n    console.log(\"KDGRP\", resultado.KDGRP);\n    console.log(\"BZIRK\", resultado.BZIRK);\n    console.log(\"ZESTPROV\", resultado.ID_ESTADO);\n  \n\n    \n    // var sql = 'INSERT INTO prueba(EVENTOGUID) VALUES ?';\n    var sql = 'INSERT INTO prueba(idOficinaMovil,EVENTOGUID,VKORG,KDGRP,BZIRK,KUNNR,ID_Solicitud,ID_Motivo_Solicitud,ZTEXT,ZFECHA,ZHORA,fechaSolicitud,ZNAME1,NAME_FIRST,NAME_LAST,ZTELFIJO,ZCELULAR,ZTELFIJO_CEL,ZCORREO,ZZCRM_LAT,ZZCRM_LONG,ZCPOSTAL,estado,ZESTPROV,ZMUNIDELEG,ZCOLONIA,ZCALLE,ZCALLECON,ZENTRECALLE1,ZENTRECALLE2,ZNUMEXT,ZLOTE,ZMANZANA,ZNUMINT,ZENREJADO,VPTYP,ROUTE,RUTA_REPARTO,diasVisita,SEQULUNES,SEQUMARTES,SEQUMIERCOLES,SEQUJUEVES,SEQUVIERNES,SEQUSABADO,IDMETODO,ZREQREM,ZREQFAC,ZPAPERLESS,ZFISICAMORAL,ZNAME4,ZRFCNOMBRE,ZRFCAPELLIDOS,ZRFC,ZRFCCODIGOPOSTAL,ZRFCESTADO,ZRFCMUNDELEG,ZRFCCOLONIA,ZRFCCALLE,ZRFCCALLE_CON,ZRFCNUM_EXT,ZRFCNUM_INT,ZCFDI,ISSCOM,GEC,LOCALIDAD,OCASIONDECONSUMO) VALUES ?';\n    var values = [[\n            cliente.idOficinaMovil,\n            cliente.EVENTOGUID,\n            cliente.VKORG,\n            cliente.KDGRP,\n            cliente.BZIRK,\n            cliente.KUNNR,\n            cliente.ID_Solicitud,\n            cliente.ID_Motivo_Solicitud,\n            cliente.ZTEXT,\n            cliente.ZFECHA,\n            cliente.ZHORA,\n            cliente.fechaSolicitud,\n            cliente.ZNAME1,\n            cliente.NAME_FIRST,\n            cliente.NAME_LAST,\n            cliente.ZTELFIJO,\n            cliente.ZCELULAR,\n            cliente.ZTELFIJO_CEL,\n            cliente.ZCORREO,\n            cliente.ZZCRM_LAT,\n            cliente.ZZCRM_LONG,\n            cliente.ZCPOSTAL,\n            cliente.estado,\n            cliente.ZESTPROV,\n            cliente.ZMUNIDELEG,\n            cliente.ZCOLONIA,\n            cliente.ZCALLE,\n            cliente.ZCALLECON,\n            cliente.ZENTRECALLE1,\n            cliente.ZENTRECALLE2,\n            cliente.ZNUMEXT,\n            cliente.ZLOTE,\n            cliente.ZMANZANA,\n            cliente.ZNUMINT,\n            cliente.ZENREJADO,\n            cliente.VPTYP,\n            cliente.ROUTE,\n            cliente.RUTA_REPARTO,\n            cliente.diasVisita,\n            cliente.SEQULUNES,\n            cliente.SEQUMARTES,\n            cliente.SEQUMIERCOLES,\n            cliente.SEQUJUEVES,\n            cliente.SEQUVIERNES,\n            cliente.SEQUSABADO,\n            cliente.IDMETODO,\n            cliente.ZREQREM,\n            cliente.ZREQFAC,\n            cliente.ZPAPERLESS,\n            cliente.ZFISICAMORAL,\n            cliente.ZNAME4,\n            cliente.ZRFCNOMBRE,\n            cliente.ZRFCAPELLIDOS,\n            cliente.ZRFC,\n            cliente.ZRFCCODIGOPOSTAL,\n            cliente.ZRFCESTADO,\n            cliente.ZRFCMUNDELEG,\n            cliente.ZRFCCOLONIA,\n            cliente.ZRFCCALLE,\n            cliente.ZRFCCALLE_CON,\n            cliente.ZRFCNUM_EXT,\n            cliente.ZRFCNUM_INT,\n            cliente.ZCFDI,\n            cliente.ISSCOM,\n            cliente.GEC,\n            cliente.LOCALIDAD,\n            cliente.OCASIONDECONSUMO\n            ]];\n\n        connection.query(sql, [values], function (err, result) {\n    \n        if (err) throw err;\n        console.log(\"Number of records inserted: \" + result.affectedRows);\n        connection.end();\n        });\n        callback(null, { \"mensaje\": \"Alta correcta\" });\n    });\n  });\n\n    // callback(null, cliente);\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 303,
          "memory": 256,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2KOFClientesGatewayaltapost",
            "config": {}
          }
        ],
        "testCases": {
          "b206dbad-f84f-44ec-a945-b840c540dbd0": {
            "id": "b206dbad-f84f-44ec-a945-b840c540dbd0",
            "name": "Alta",
            "functionId": "b05d9142-3d79-4cdf-808a-f24a51e5030c",
            "event": "{\n    \"idPedido\": 19,\n    \"productos\": [{\n        \"idProductoPedido\": 53,\n        \"idProducto\": {\n            \"idProducto\": 1,\n            \"nombreProducto\": \"Coca-Cola\",\n            \"descripcionProducto\": \"335 ml\",\n            \"imagenProducto\": {\n                \"id\": 36771\n            },\n            \"ingredientesProducto\": \"\",\n            \"informacionNutricionalProducto\": \"\"\n        },\n        \"cantidad\": 5,\n        \"precio\": \"\"\n    }, {\n        \"idProductoPedido\": 54,\n        \"idProducto\": {\n            \"idProducto\": 6,\n            \"nombreProducto\": \"Santa Clara\",\n            \"descripcionProducto\": \"1 L\",\n            \"imagenProducto\": {\n                \"id\": 36775\n            },\n            \"ingredientesProducto\": \"\",\n            \"informacionNutricionalProducto\": \"\"\n        },\n        \"cantidad\": 8,\n        \"precio\": \"\"\n    }],\n    \"cliente\": {\n        \"idCliente\": 23,\n        \"codigoCliente\": \"CLI_TEMP25\",\n        \"fechaAlta\": \"2019-09-04T16:07:38Z\",\n        \"nombreTienda\": \"Tienda Alta Cliente 23\",\n        \"nombreContacto\": \"Nombre Alta Cliente 23\",\n        \"apellidoContacto\": \"Appellidos Alta Cliente 23\",\n        \"telefono\": \"232323232\",\n        \"celular\": \"444444444\",\n        \"correo\": \"Cliente23@sfdrgq.com\",\n        \"latitud\": \"40.52876\",\n        \"longitud\": \"-3.641959\",\n        \"codigoPostal\": \"1030\",\n        \"estado\": \"CDM\",\n        \"municipio\": \"ÁLVARO OBREGÓN\",\n        \"colonia\": \"AXOTLA\",\n        \"calle\": \"Avenida de Bruselas\",\n        \"numeroExt\": \"35\",\n        \"numeroInt\": \"22\",\n        \"enrejado\": true,\n        \"lunes\": true,\n        \"miercoles\": true,\n        \"jueves\": true,\n        \"viernes\": true,\n        \"sabado\": true,\n        \"diaEntrega\": 6,\n        \"rutaDeReparto\": \"RAB301\",\n        \"factura\": true,\n        \"remision\": true,\n        \"noImpresion\": true,\n        \"regimenFiscal\": \"\",\n        \"razonSocial\": \"\",\n        \"RFCregimenFiscal\": \"M5\",\n        \"RFCnombre\": \"Rfc nombre cliente 23\",\n        \"RFCapellidos\": \"Rfc apellidos cliente 23\",\n        \"RFC\": \"Rfc cliente 23\",\n        \"RFCcodigoPostal\": \"1030\",\n        \"RFCestado\": \"CDM\",\n        \"RFCmunicipio\": \"ÁLVARO OBREGÓN\",\n        \"RFCcolonia\": \"FLORIDA\",\n        \"RFCcalle\": \"Rfc calle clie te 2e\",\n        \"RFCnumeroExt\": \"11\",\n        \"RFCnumeroInt\": \"77\",\n        \"CFDI\": \"D05\",\n        \"descripcion\": \"\",\n        \"ISSCOM\": {\n            \"idCuestionario\": 13,\n            \"cuestionario\": \"5\",\n            \"p1\": \"D\",\n            \"p2\": \"\",\n            \"p3\": \"\",\n            \"p4\": \"\",\n            \"p5\": \"\"\n        },\n        \"GEC\": {\n            \"idCuestionario\": 13,\n            \"p1\": \"S\",\n            \"p2\": \"S\",\n            \"p3\": \"N\"\n        }\n    },\n    \"fechaPedidoBebidas\": \"2019-09-04T16:07:55.480Z\"\n}"
          }
        }
      },
      "30550c2b-0a41-421f-ae44-6b0f1a4595dc": {
        "id": "30550c2b-0a41-421f-ae44-6b0f1a4595dc",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "ConnectionManager.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/ConnectionManager.js",
        "code": "module.exports = function() {\n    this.dbConnections = [];\n\n    this.dbConnections[\"kof\"] = {\n        host: \"kof.cmk4tzokwqsd.us-west-2.rds.amazonaws.com\",\n        port: \"3306\",\n        user: \"kofadmin\",\n        password: process.env.Password_rdsKof,\n        database: \"undefined\"\n    };\n};"
      }
    },
    "deletedFiles": [],
    "rootNode": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
    "openFiles": [
      "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
      "a0427590-749e-4c7c-a1c9-c666864ec1ba",
      "b05d9142-3d79-4cdf-808a-f24a51e5030c",
      "d208d08c-c661-4a9c-8b84-5a3be13c9a94"
    ],
    "currentFileId": "b05d9142-3d79-4cdf-808a-f24a51e5030c",
    "resources": {
      "apigusWest2SMSGatewaysendSMSpost": {
        "name": "apigusWest2SMSGatewaysendSMSpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "SMSGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "sendSMS",
          "resourcePath": "/sendSMS",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "snsDirectSMSResource": {
        "name": "snsDirectSMSResource",
        "type": "SNS",
        "config": {
          "snsType": 1,
          "numbers": [
            "@{receiver}"
          ]
        }
      },
      "apigusWest2MailGatewaysendEmailpost": {
        "name": "apigusWest2MailGatewaysendEmailpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "MailGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "sendEmail",
          "resourcePath": "/sendEmail",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2GeoGatewaygeocoderget": {
        "name": "apigusWest2GeoGatewaygeocoderget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "GeoGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "geocoder",
          "resourcePath": "/geocoder",
          "restMethod": "GET",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2GeoGatewaygeocoderpost": {
        "name": "apigusWest2GeoGatewaygeocoderpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "GeoGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "geocoder",
          "resourcePath": "/geocoder",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2InventarioGatewayinventarioany": {
        "name": "apigusWest2InventarioGatewayinventarioany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "InventarioGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "inventario",
          "resourcePath": "/inventario",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2ConsultaClientesGatewayconsultaClientespost": {
        "name": "apigusWest2ConsultaClientesGatewayconsultaClientespost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "ConsultaClientesGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "consultaClientes",
          "resourcePath": "/consultaClientes",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2ClientesGatewayaltaClientespost": {
        "name": "apigusWest2ClientesGatewayaltaClientespost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "ClientesGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "altaClientes",
          "resourcePath": "/altaClientes",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2ClientesGatewayaltaDeClientespost": {
        "name": "apigusWest2ClientesGatewayaltaDeClientespost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "ClientesGateway",
          "apiId": "xtp9vbk9k4",
          "endpointType": "EDGE",
          "rootResourceId": "qi91nr3urc",
          "existingResources": {
            "/altaClientes": "aps7r8",
            "/": "qi91nr3urc"
          },
          "resourceMode": 0,
          "resourceName": "altaDeClientes",
          "resourcePath": "/altaDeClientes",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "s3clienteskof": {
        "name": "s3clienteskof",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-west-2",
            "name": "clienteskof"
          }
        }
      },
      "rds-kof": {
        "name": "rds-kof",
        "type": "RDS",
        "config": {
          "editMode": false,
          "operation": 1,
          "rdsInstance": {
            "rdsEngineType": "mysql",
            "rdsEdition": "mysql",
            "rdsInstanceSpec": {
              "dbInstanceClass": "db.t2.micro",
              "dbLicenseModel": "general-public-license",
              "dbEngineVersion": "5.7.22"
            },
            "rdsSetting": {
              "instanceIdentifier": "kof",
              "masterUsername": "kofadmin",
              "masterPassword": "CyEoDDTWfCtPY7h3NKzB"
            },
            "rdsDBOptions": {
              "dbPort": 3306
            },
            "rdsInstanceArn": "arn:aws:rds:us-west-2:121721526963:db:kof",
            "Host": "kof.cmk4tzokwqsd.us-west-2.rds.amazonaws.com",
            "doesExist": true
          },
          "rdsInstanceResources": [],
          "projectRegion": "us-west-2",
          "mode": 1,
          "additionalFiles": [],
          "params": {
            "query": "",
            "inserts": ""
          },
          "isGlobalEditMode": false,
          "enableInject": true,
          "isNewFromGlobal": false
        }
      },
      "apigusWest2KOFClientesGatewayaltapost": {
        "name": "apigusWest2KOFClientesGatewayaltapost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "KOFClientesGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "alta",
          "resourcePath": "/alta",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "b923f823-ef31-4b00-90ab-f20e7764551a",
        "varKey": "PYTHONPATH",
        "varValue": "/var/runtime:/var/task/LambdaSNS",
        "shouldPersist": true,
        "displayOnly": false,
        "editable": true
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "request": {
          "name": "request",
          "version": "2.88.0",
          "language": "javascript"
        },
        "pandas": {
          "name": "pandas",
          "version": "0.25.0",
          "dev": false,
          "language": "python"
        },
        "tinys3": {
          "name": "tinys3",
          "version": "0.1.12",
          "dev": false,
          "language": "python"
        },
        "xlrd": {
          "name": "xlrd",
          "version": "1.2.0",
          "dev": false,
          "language": "python"
        },
        "json2xls": {
          "name": "json2xls",
          "version": "0.1.2",
          "language": "javascript"
        },
        "json2csv": {
          "name": "json2csv",
          "version": "4.5.2",
          "language": "javascript"
        },
        "csvtojson": {
          "name": "csvtojson",
          "version": "2.0.10",
          "language": "javascript"
        },
        "uuid": {
          "name": "uuid",
          "version": "3.3.3",
          "language": "javascript"
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        },
        "mysql": {
          "name": "mysql",
          "version": "2.17.1",
          "language": "javascript"
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "LambdaSNS",
    "projectDescription": "API para habilitar servicio SMS en pilotos KOF",
    "projectVersion": "1.0.0",
    "projectRegion": "us-west-2",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1567704942410
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "LambdaSNS",
      "url": "https://github.com/Kevin-Olascoaga/LambdaKOF"
    }
  }
}