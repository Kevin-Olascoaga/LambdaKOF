{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f": {
        "id": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "parent": null,
        "name": "LambdaSNS",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
          "75df272d-d232-43df-9648-86a980f1a19c",
          "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
          "4d68f474-8705-43b9-bfab-301d2efece87"
        ],
        "isRemovable": false,
        "filePath": "LambdaSNS"
      },
      "d208d08c-c661-4a9c-8b84-5a3be13c9a94": {
        "id": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst sns = new AWS.SNS();\n\nexports.handler = function (event, context, callback) {\n\n    let receiver = event['receiver'];\n    let sender = event['sender'];\n    let message = event['message'];\n\n    console.log(\"Sending message\", message, \"to receiver\", receiver);\n\n    sns.publish({\n        Message: message,\n        MessageAttributes: {\n            'AWS.SNS.SMS.SMSType': {\n                'DataType': 'String',\n                'StringValue': 'Promotional'\n            },\n            'AWS.SNS.SMS.SenderID': {\n                'DataType': 'String',\n                'StringValue': sender\n            }\n        },\n        PhoneNumber: receiver\n    }).promise()\n        .then(data => {\n            // your code goes here\n            console.log(\"Sent message to\", receiver);\n\t\t\tcallback(null, data);\n        })\n        .catch(err => {\n            // error handling goes here\n            console.log(\"Sending failed\", err);\n\t\t\tcallback(err);\n        });\n\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2SMSGatewaysendSMSpost",
            "config": {}
          }
        ],
        "testCases": {
          "0eb08f81-4a9a-459a-a859-44ddf14d836c": {
            "id": "0eb08f81-4a9a-459a-a859-44ddf14d836c",
            "functionId": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
            "name": "Mensaje prueba",
            "event": "{\n \"receiver\": \"+527771302351\",\n \"sender\": \"KOFSMS\",\n \"message\": \"Alta de cliente\"\n}"
          },
          "18394956-b41b-4cd3-9d02-61b1677d2b9e": {
            "id": "18394956-b41b-4cd3-9d02-61b1677d2b9e",
            "name": "geocoder",
            "functionId": "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
            "event": "{\n    \"lat\": \"value1\",\n    \"lon\": \"value2\"\n}"
          }
        }
      },
      "75df272d-d232-43df-9648-86a980f1a19c": {
        "id": "75df272d-d232-43df-9648-86a980f1a19c",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "mail.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/mail.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    let to = event['to'];\n    let cc = event['cc'];\n    let bcc = event['bcc'];\n    let subject = event['subject'];\n    let body = event['body'];\n\n    callback(null, {\"message\": \"Successfully executed\"});\n\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2MailGatewaysendEmailpost",
            "config": {}
          }
        ]
      },
      "05bfcffd-9744-4f23-89d0-3ce97fd8f097": {
        "id": "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "geocoder.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/geocoder.js",
        "code": "var Request = require(\"request\");\n\nexports.handler = function(event, context, callback) {\n    \n    let lat = event['lat'];\n    let lon = event['lon'];\n\n    var data = geocoder(lat,lon);\n    \n    callback(null, data);\n}\n\nfunction geocoder(lat,lon){\n    Request.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lon + \"&key=AIzaSyB_H0OkKqjnld_RXVKXClJbENg4xO4eVxQ\", (error, response, body) => {\n        if(error) {\n            return console.dir(error);\n        }\n        let api = JSON.parse(body);\n        let direccion = api.results[0];\n\n        console.log(direccion);\n\n        return direccion;\n\n\n    });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2GeoGatewaygeocoderpost",
            "config": {}
          }
        ]
      },
      "4d68f474-8705-43b9-bfab-301d2efece87": {
        "id": "4d68f474-8705-43b9-bfab-301d2efece87",
        "parent": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
        "name": "clientes.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "LambdaSNS/clientes.js",
        "code": "exports.handler = function(event, context, callback) {\n    \n    let cliente = {\n    idCliente: event['idCliente'],\n    codigoCliente: event['codigoCliente'],\n    fechaAlta: event['fechaAlta'],\n    nombreTienda: event['nombreTienda'],\n    nombreContacto: event['nombreContacto'],\n    apellidoContacto: event['apellidoContacto'],\n    telefono: event['telefono'],\n    celular: event['celular'],\n    correo: event['correo'],\n    latitud: event['latitud'],\n    longitud: event['longitud'],\n    codigoPostal: event['codigoPostal'],\n    estado: event['estado'],\n    municipio: event['municipio'],\n    colonia: event['colonia'],\n    calle: event['calle'],\n    numero: event['numero'],\n    rutaDeReparto: event['rutaDeReparto'],\n    remision: event['remision'],\n    regimenFiscal: event['regimenFiscal'],\n    RFCnombre: event['RFCnombre'],\n    RFCapellidos: event['RFCapellidos'],\n    RFC: event['RFC'],\n    RFCcodigoPostal: event['RFCcodigoPostal'],\n    RFCestado: event['RFCestado'],\n    RFCmunicipio: event['RFCmunicipio'],\n    RFCcolonia: event['RFCcolonia'],\n    RFCcalle: event['RFCcalle'],\n    RFCnumeroExt: event['RFCnumeroExt'],\n    RFCnumeroInt: event['RFCnumeroInt'],\n    CFDI: event['CFDI'],\n    descripcion: event['descripcion'],\n    ISSCOM: {\n        cuestionario: event['ISSCOM.cuestionario'],\n        p1: \"B\",\n        p2: \"A\",\n        p3: \"\",\n        p4: \"\",\n        p5: \"\" \n        },\n    GEC: {\n        p1: \"SI\",\n        p2: \"NO\",\n        p3: \"SI\"\n        }\n    };\n\n    callback(null, {\"message\": \"Successfully executed\"});\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusWest2ClientesGatewayaltaClientesany",
            "config": {}
          }
        ]
      }
    },
    "deletedFiles": [
      "LambdaSNS/filtroInventarios.py",
      "LambdaSNS/__init__.py"
    ],
    "rootNode": "2c2fe5a7-7a86-4aa0-beb8-43c1c8b5437f",
    "openFiles": [
      "d208d08c-c661-4a9c-8b84-5a3be13c9a94",
      "05bfcffd-9744-4f23-89d0-3ce97fd8f097",
      "4d68f474-8705-43b9-bfab-301d2efece87"
    ],
    "currentFileId": "4d68f474-8705-43b9-bfab-301d2efece87",
    "resources": {
      "apigusWest2SMSGatewaysendSMSpost": {
        "name": "apigusWest2SMSGatewaysendSMSpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "SMSGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "sendSMS",
          "resourcePath": "/sendSMS",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "snsDirectSMSResource": {
        "name": "snsDirectSMSResource",
        "type": "SNS",
        "config": {
          "snsType": 1,
          "numbers": [
            "@{receiver}"
          ]
        }
      },
      "apigusWest2MailGatewaysendEmailpost": {
        "name": "apigusWest2MailGatewaysendEmailpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "MailGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "sendEmail",
          "resourcePath": "/sendEmail",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2GeoGatewaygeocoderget": {
        "name": "apigusWest2GeoGatewaygeocoderget",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "GeoGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "geocoder",
          "resourcePath": "/geocoder",
          "restMethod": "GET",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2GeoGatewaygeocoderpost": {
        "name": "apigusWest2GeoGatewaygeocoderpost",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "GeoGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "geocoder",
          "resourcePath": "/geocoder",
          "restMethod": "POST",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2InventarioGatewayinventarioany": {
        "name": "apigusWest2InventarioGatewayinventarioany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "InventarioGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "inventario",
          "resourcePath": "/inventario",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      },
      "apigusWest2ClientesGatewayaltaClientesany": {
        "name": "apigusWest2ClientesGatewayaltaClientesany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-west-2",
          "apiMode": 0,
          "apiName": "ClientesGateway",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "altaClientes",
          "resourcePath": "/altaClientes",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "Prod",
          "mode": 0
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "b923f823-ef31-4b00-90ab-f20e7764551a",
        "varKey": "PYTHONPATH",
        "varValue": "/var/runtime:/var/task/LambdaSNS",
        "shouldPersist": true,
        "displayOnly": false,
        "editable": true
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "request": {
          "name": "request",
          "version": "2.88.0",
          "language": "javascript"
        },
        "pandas": {
          "name": "pandas",
          "version": "0.25.0",
          "dev": false,
          "language": "python"
        },
        "tinys3": {
          "name": "tinys3",
          "version": "0.1.12",
          "dev": false,
          "language": "python"
        },
        "xlrd": {
          "name": "xlrd",
          "version": "1.2.0",
          "dev": false,
          "language": "python"
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "LambdaSNS",
    "projectDescription": "API para habilitar servicio SMS en pilotos KOF",
    "projectVersion": "1.0.0",
    "projectRegion": "us-west-2",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1566578409941
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "LambdaSNS",
      "url": "https://github.com/Kevin-Olascoaga/LambdaKOF"
    }
  }
}